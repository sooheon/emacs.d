#!/bin/sh
#
# Copyright (C) 2016  Jonas Bernoulli
#
# Author: Jonas Bernoulli <jonas@bernoul.li>
# License: GPL v3 <https://www.gnu.org/licenses/gpl-3.0.txt>

hive_remote=$(git config -f .gitmodules borg.collective)
push_remote=$(git config -f .gitmodules borg.pushDefault)

git submodule--helper list |
while read mode sha1 stage path
do
    name=$(git submodule--helper name "$path")
    url=$(git config -f .gitmodules submodule."$name".url)

    if test -e "$path" && ! test -e "$path"/.git
    then
        git submodule--helper clone --name "$name" --path "$path" --url "$url"

        git config -f .gitmodules --get-all submodule."$name".extra-remote |
        while read remote remote_url
        do
            if ! test -e "$path"/.git
            then
                git submodule--helper clone --name "$name" --path "$path" --url "$remote_url" &&
                git remote rename origin "$remote"
            else
                (
                    cd "$path"
                    git remote add "$remote" "$remote_url"
                    git fetch "$remote"
                )
            fi

            if test -e "$path"/.git
            then
                (
                    cd "$path"
                    if test "$remote" = "$hive_remote"
                    then
                        git config branch.master.remote "$remote"

                    elif test "$remote" = "$push_remote"
                    then
                        git config remote.pushDefault "$remote"
                    fi
                )
            fi
        done

        if test -e "$path"/.git
        then
            (
                cd "$path"
                git reset --hard "$sha1" ||
                echo >&2 "futile: checkout of '$sha1' into submodule path '$path' failed"
            )
        else
            echo >&2 "futile: clone of any remote into submodule path '$path' failed"
        fi
    fi
done
